title: Enter connection information.
level: 4
ref: compass-enter-connection-info
content: |

    Once Compass is :doc:`running </install>`, an
    initial connection dialog appears:

    .. figure:: /images/compass/connect-to-host-2.png
      :figwidth: 626px

    .. list-table::
       :widths: 30 70

       * - :guilabel:`Hostname`

         - The hostname of the machine where the ``mongod`` instance is
           running.

           .. tip::

             Starting in version 1.8.0, MongoDB Compass can detect
             whether you have a MongoDB
             :manual:`URI connection string </reference/connection-string>`
             in your system clipboard and auto-populate the connection
             dialog from the URI. Open MongoDB Compass with a URI
             connection string in your clipboard and click :guilabel:`Yes`
             when prompted to auto-populate the dialog.

             Starting in version 1.12.0, Compass can detect an
             :abbr:`SRV record (Service record)` for a MongoDB
             connection in your system clipboard and auto-populate
             the connection dialog from the SRV record. When
             populating from an SRV record, Compass automatically
             toggles the :guilabel:`SRV Record` connection option to
             ``On``.

       * - :guilabel:`Port`
         - The port on which ``mongod`` is running.

       * - :guilabel:`SRV Record`

         - *New in version 1.12.0*

           Indicates whether the specified connection is an
           :abbr:`SRV record (Service record)`.

       * - :guilabel:`Authentication`

         - The authentication to use if the ``mongod`` instance
           requires authentication. Select:

           - :guilabel:`Username / Password` if the ``mongod`` instance
             uses either MongoDB-CR or SCRAM-SHA-1 as its
             authentication mechanism.

           - :guilabel:`X.509` if the ``mongod`` instance uses
             X.509 as its authentication mechanism.

             *Not Available in Compass Community Edition*

           - :guilabel:`Kerberos` if the ``mongod`` instance uses
             Kerberos as its authentication mechanism.

             *Not Available in Compass Community Edition*

           - :guilabel:`LDAP` if the ``mongod`` instance uses LDAP as
             its authentication mechanism.

             *Not Available in Compass Community Edition*

           For MongoDB access required, see :ref:`required-access`.

       * - :guilabel:`Replica Set Name`

         - The name of the MongoDB replica set to which you want to connect.

       * - :guilabel:`Read Preference`

         - Specifies how Compass directs read operations. Options are
           ``Primary``, ``Primary Preferred``, ``Secondary``,
           ``Secondary Preferred``, and ``Nearest``.
           For more information on these options, see
           `Read Preference <https://docs.mongodb.com/manual/core/read-preference/>`_.

       * - :guilabel:`SSL`

         - Select whether Compass should connect to the target host via
           SSL or not. Select:

           - :guilabel:`Use System CA/Atlas Deployment` to connect to
             `MongoDB Atlas <https://cloud.mongodb.com?jmp=docs>`_.

           - :guilabel:`Server Validation` to have Compass validate the
             identity of the :binary:`~bin.mongod` instance. If selected,
             you must provide

             .. list-table::
                :widths: 35 65

                * - *Certificate Authority File*

                  - One or more certificate files from trusted
                    Certificate Authorities to validate the
                    certificate provided by the :binary:`~bin.mongod`
                    instance.

           - :guilabel:`Server and Client Validation` if the
             :binary:`~bin.mongod` performs certificate validation from its
             clients and to have Compass validate the identity of the
             :binary:`~bin.mongod` instance. If selected, you must provide

             .. list-table::
                :widths: 35 65

                * - *Certificate Authority File*

                  - One or more certificate files from trusted
                    Certificate Authorities to validate the
                    certificate provided by the :binary:`~bin.mongod`
                    instance.

                * - *Client Certificate*

                  - A TLS/SSL certificate to present to
                    :binary:`~bin.mongod` to verify the identity of the
                    Compass client. Typical file extensions for the
                    certificate are ``.crt`` or ``.pem``.

                * - *Client Private Key*

                  - A TLS/SSL key file to :binary:`~bin.mongod` to
                    verify the identity of the Compass client.
                    Typical file extensions for the private key are
                    ``.key`` or ``.pem``.

                * - *Client Key Password*

                  - If the *Client Private Key* is protected with a
                    password/passphrase, you must provide the
                    password/passphrase.

           - :guilabel:`Unvalidated` to use TLS/SSL without any identity validation.

           .. tip::
              For production use, your MongoDB deployment should use valid
              certificates generated and signed by a single certificate
              authority. You or your organization can generate and
              maintain an independent certificate authority, or use
              certificates generated by a third-party SSL vendor.

       * - :guilabel:`SSH tunnel`

         - Select whether Compass should connect to a MongoDB cluster
           via an SSH tunnel, which automatically starts when you connect
           to MongoDB, and stops when you disconnect. If selected,
           choose either a password or an identity file to provide
           authentication.

           .. figure:: /images/compass/ssh-tunnel-support.png
             :figwidth: 430px

           Enter information for the SSH tunnel.

           .. list-table::
              :widths: 35 65

              * - *SSH Hostname*

                - Enter the bastion (jumpbox) hostname. This is the
                  unique identifier (Fully Qualified Domain Name, or
                  FQDN) for the machine to be accessed.


              * - *SSH Tunnel Port*

                - Provide the port used for the SSH connection. This
                  defaults to 22, the standard port for SSH.

              * - *SSH Username*

                - The username of the profile to log into on the remote
                  system. This will be the user for which you want to
                  establish the SSH connection.

              * - *SSH Identity File*

                - Select the file from which the identity (private key)
                  for SSH public key authentication is read.

                  Unix or OS X: If using OpenSSH, identity files are
                  found in the :file:`~/.ssh` directory. By default,
                  the private key files have one of the following file
                  names:

                  - ``id_dsa``
                  - ``id_ecdsa``
                  - ``id_ed25519``
                  - ``id_rsa``

                  On Windows, the location of the identify files
                  depends on your choice of SSH client, such as PuTTY.

              * - *SSH Passphrase*

                - If your private key is encrypted, provide the
                  passphrase used to decrypt your private keys (stored
                  in the specified identity file). A passphrase
                  provides an extra layer of security for an SSH
                  connection.

              * - *SSH Password*
                -  The password used to secure the SSH connection.
                   This is required if you are not using an identity file.

           To use an SSH tunnel through a bastion host, the ssh
           configuration on the bastion host must allow TCP port
           forwarding; i.e., the ``AllowTcpForwarding`` directive in
           the :file:`/etc/ssh/sshd_config` file is set to ``yes``. If
           ``AllowTcpForwarding`` is not set to ``yes``, set to ``yes``
           and restart the ssh daemon (``sudo service sshd restart``).

           Instead of creating the SSH tunnel through the Compass UI, you can also create
           the tunnel manually from the command line:

           .. code-block:: sh

              ssh -L <local_port>:<mongodb_hostname>:<mongodb_port> \
                 <user>@<bastion_hostname> -fN

           .. example::

              If you have a :binary:`~bin.mongod` instance running on
              (internal) ``hostname-a.com`` on port 27017, and the
              bastion host is ``hostname-b.com`` with user name
              ``ec2-user``, you can build the tunnel via

              .. code-block:: sh

                 ssh -L 27000:hostname-a.com:27017 ec2-user@hostname-b.com -fN

              Using this SSH tunnel, you can now connect Compass (or
              the :binary:`~bin.mongo` shell) to ``localhost:27000`` to
              connect to the :binary:`~bin.mongod` instance running on
              ``hostname-a.com``.


       * - :guilabel:`Favorite Name`

         - *Optional*. A name for the connection. When you use Compass in the
           future, previous connections appear in the left pane of this
           window under Favorites.
---
title: Connect.
level: 4
ref: compass-connect
content: |
   When the connection information is complete, click the Connect
   button to launch the main Compass window.

   Once connected to a MongoDB instance, the home |home| on the left hand
   pane provides details regarding the MongoDB instance, such as the
   hostname and port, as well as the version of MongoDB. For more
   information, see :doc:`/instance`.
...
